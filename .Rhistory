licence()
clear()
ls()
rm(list=ls())
ls()
load(functiontest)
load(functiontest.R)
import(functiontest)
source(functiontest)
source(functiontest.R)
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
naiveBayes()
source("functiontest.R")
buildCorpora()
source("functiontest.R")
buildCorpora()
alldir
a <- c(1:20)
a
a <- map("blues", a)
a <- apply("blues", a)
a <- apply(a, "blues")
a <- lapply(a, "blues")
source("functiontest.R")
getLabels
getLabels()
source("functiontest.R")
source("functiontest.R")
naiveBayes()
source("functiontest.R")
naiveBayes()
source("functiontest.R")
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
naiveBayes()
source("functiontest.R")
naiveBayes()
source("functiontest.R")
naiveBayes()
source("functiontest.R")
naiveBayes()
source("functiontest.R")
dtm <- naiveBayes()
dtm
inspect(dtm)
source("functiontest.R")
dtm <- naiveBayes()
inspect(dtm)
source("functiontest.R")
dtm <- naiveBayes()
inspect(dtm)
source("functiontest.R")
dtm <- naiveBayes()
dim(dtm)
source("functiontest.R")
dtm <- naiveBayes()
dim(dtm)
source("functiontest.R")
source("functiontest.R")
samples
source("functiontest.R")
getSamples()
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
global.samples
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
ls()
rm(list=ls())
ls()
source("functiontest.R")
global.test
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
global.test
source("functiontest.R")
global.test
source("functiontest.R")
global.test
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
offset<-1
samples<-c()
for (i in genres) {
samples<-append(samples,sample(offset:(offset+genreSize-1),10))
offset<-offset+genreSize
}
samples
samples<-c()
offset<-1
for (i in genres) {
samples<-append(samples,sample(offset:(offset+genreSize-1),5))
offset<-offset+genreSize
}
samples
source("functiontest.R")
source("functiontest.R")
global.samples
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
source("functiontest.R")
global.test
source("functiontest.R")
global.test
source("functiontest.R")
global.test
source("functiontest.R")
global.test
dim(global.test)
global.test
source("functiontest.R")
global.test
ls()
rm(list=ls())
source("functiontest.R")
rm(list=ls())
source("functiontest.R")
global.test
source("functiontest.R")
reload()
global.test
reload()
global.test
reload()
global.test
source("naivebayes.r")
reload()
global.test
reload()
global.test
reload()
global.test
reload()
global.test
reload()
global.test
reload()
global.test
reload()
global.test
reload()
global.test
reload()
reload()
source("naivebayes.r")
reload()
reload()
naivebayes.result
q()
